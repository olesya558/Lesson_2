# 1. Вероятность того, что стрелок попадет в мишень, выстрелив один раз, равна 0.8.
# Стрелок выстрелил 100 раз. Найдите вероятность того, что стрелок попадет в цель ровно 85 раз.

# n - число испытаний 100
# p - вероятность появления события 0.8

from math import factorial
import numpy as np

def combinations(n, k):
    return int(factorial(n) / (factorial(k) * factorial(n - k)))

def comb_success(k, n, p):
    C_kn = combinations(n, k)
    return C_kn * (p**k) * (1 - p)**(n - k)

def pyasson_comb(m, n, p):
   lambda_= n * p
   return lambda_**m / factorial(m) * np.exp(-lambda_)

print(comb_success(85, 100, 0.8))
# ответ 0.048061793700746355

# 2. Вероятность того, что лампочка перегорит в течение первого дня эксплуатации, равна 0.0004.
# В жилом комплексе после ремонта в один день включили 5000 новых лампочек.
# Какова вероятность, что ни одна из них не перегорит в первый день?
# Какова вероятность, что перегорят ровно две?

print(pyasson_comb(0, 5000, 0.0004))
# ответ 0.13528114551440706
print(pyasson_comb(2, 5000, 0.0004))
# ответ 0.2707247150266753

# 3. Монету подбросили 144 раза. Какова вероятность, что орел выпадет ровно 70 раз?

print(comb_success(70, 144, 0.5))
# ответ 0.06281178035144776

# 4.В первом ящике находится 10 мячей, из которых 7 - белые.
# Во втором ящике - 11 мячей, из которых 9 белых.
# Из каждого ящика вытаскивают случайным образом по два мяча.
# Какова вероятность того, что все мячи белые?
# Какова вероятность того, что ровно два мяча белые?
# Какова вероятность того, что, хотя бы один мяч белый?

# все мячи белые
P = combinations(7, 2) / combinations(10, 2) * combinations(9, 2) / combinations(11, 2)
print(P)
#  ответ 0.3054545454545455

# два мяча белые
P = combinations(7, 2) / combinations(10, 2) * combinations(2, 2) / combinations(11, 2)
print(P)
# ответ 0.008484848484848486

# один мяч белый
P = combinations(7, 2) / combinations(10, 2) * combinations(9, 1) / combinations(11, 2)
print(P)
# ответ 0.07636363636363637